# documentation: https://github.com/muety/wakapi#%EF%B8%8F-how-to-use
# slogan: Keep Track of Your Coding Time.
# tags: wakatime,track,time
# logo: svgs/wakapi.svg

services:
  wakapi:
    build: .
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      # See README.md and config.default.yml for all config options
      - SERVICE_FQDN_WAKAPI
      - SERVICE_WAKAPI_DB_TYPE="postgres"
      - WAKAPI_DB_NAME=$POSTGRESQL_DATABASE
      - WAKAPI_DB_USER=$SERVICE_USER_POSTGRESQL
      - WAKAPI_DB_HOST="db"
      - WAKAPI_DB_PORT="5432"
      - WAKAPI_DB_PASSWORD_FILE="/run/secrets/db_password"       # alternatively, set WAKAPI_DB_PASSWORD directly without the use of secrets
      - WAKAPI_PASSWORD_SALT_FILE="/run/secrets/password_salt"   # alternatively, set WAKAPI_PASSWORD_SALT directly without the use of secrets
      - WAKAPI_MAIL_SMTP_PASS_FILE="/run/secrets/smtp_pass"      # alternatively, set WAKAPI_MAIL_SMTP_PASS directly without the use of secrets
    secrets:
      - password_salt
      - smtp_pass
      - db_password

  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${SERVICE_USER_POSTGRESQL}
      - POSTGRES_PASSWORD_FILE="/run/secrets/db_password"        # alternatively, set POSTGRES_PASSWORD directly without the use of secrets
      - POSTGRES_DB=${POSTGRESQL_DATABASE}
    volumes:
      - wakapi-db-data:/var/lib/postgresql/data
    secrets:
      - db_password

# secrets can be defined either from a local file or from an environment variable defined on the client host (the one that runs `docker compose` command)
# see https://docs.docker.com/compose/how-tos/use-secrets/ for details
secrets:
  password_salt:
    environment: WAKAPI_PASSWORD_SALT
  smtp_pass:
    environment: WAKAPI_SMTP_PASS
  db_password:
    environment: ${SERVICE_PASSWORD_POSTGRES}

volumes:
  wakapi-db-data: {}