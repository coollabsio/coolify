# documentation: https://docs.onetimesecret.com
# slogan: Share sensitive information securely with self-destructing links that are only viewable once.
# tags: auth,password,secret,secure
# logo: svgs/one-time-secret.svg
# port: 3000

services:
  onetimesecret-redis:
    image: "redis:alpine"
    restart: unless-stopped
    command: redis-server --requirepass ${SERVICE_PASSWORD_REDIS}
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 30s
      timeout: 10s
      retries: 3
  onetimesecret:
    image: "onetimesecret/onetimesecret:latest"
    restart: unless-stopped
    environment:
      - "AUTH_AUTOVERIFY=${AUTH_AUTOVERIFY-true}"
      - "AUTH_SIGNUP=${AUTH_SIGNUP-true}"
      - "COLONEL=${COLONEL-admin@example.com}"
      - "HOST=${HOST}"
      - "REDIS_URL=redis://:${SERVICE_PASSWORD_REDIS}@onetimesecret-redis:6379/0"
      - "SECRET=${SERVICE_PASSWORD_ONETIMESECRET}"
      - "SSL=${SSL-true}"
      - RACK_ENV=production
      - SERVICE_FQDN_ONETIMESECRET_3000
    depends_on:
      - onetimesecret-redis
    healthcheck:
      test:
        - CMD
        - ruby
        - "-rnet/http"
        - "-e"
        - "exit(Net::HTTP.get_response(URI('http://localhost:3000')).is_a?(Net::HTTPSuccess) ? 0 : 1)"
      interval: 30s
      timeout: 10s
      retries: 3
